{"version":3,"file":"static/js/925.a4b48f1f.chunk.js","mappings":"2RAwIA,UAvHoB,WAClB,IAAMA,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GACxB,GAAsDC,EAAAA,EAAAA,KAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACvC,GAAsCC,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAUC,EAAAA,EAAAA,MAAYD,QACtBE,GAAWC,EAAAA,EAAAA,MAEjB,GAA+CC,EAAAA,EAAAA,GAC7C,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,KAGb,GAXF,eAAOE,EAAP,KAAkBC,EAAlB,KAAgCC,EAAhC,MAcAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,6GAEYlB,EAAY,GAAD,OACjCmB,0CADiC,uBACed,IAHtC,OAETe,EAFS,OAKfhB,EAAegB,EAAaC,OAC5BL,EACE,CACEN,MAAO,CACLC,MAAOS,EAAaC,MAAMX,MAC1BE,SAAS,GAEXC,YAAa,CACXF,MAAOS,EAAaC,MAAMR,YAC1BD,SAAS,KAGb,GAjBa,yGAAH,qDAsBhBM,MACC,CAAClB,EAAaK,EAASW,IAE1B,IAAMM,EAAwB,mCAAG,WAAMC,GAAN,wEAC/BA,EAAMC,iBADyB,kBAGvBxB,EAAY,GAAD,OACZmB,0CADY,uBACoCd,GACnD,QACAoB,KAAKC,UAAU,CACbhB,MAAOI,EAAUa,OAAOjB,MAAMC,MAC9BE,YAAaC,EAAUa,OAAOd,YAAYF,QAE5C,CACE,eAAgB,mBAChBiB,cAAe,UAAYlC,EAAKmC,QAZP,OAe7BtB,EAAS,IAAD,OAAKb,EAAKoC,OAAV,YAfqB,uGAAH,sDAmB9B,OAAIhC,GAEA,gBAAKiC,UAAU,SAAf,UACE,SAAC,IAAD,MAKD5B,GAAgBJ,GAWnB,UAAC,WAAD,YACE,SAAC,IAAD,CAAYA,MAAOA,EAAOiC,QAAS/B,KACjCH,GAAaK,IACb,kBAAM4B,UAAU,aAAaE,SAAUX,EAAvC,WACE,SAAC,IAAD,CACEY,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,8BACVC,QAAS1B,EACT2B,aAAcvC,EAAYO,MAC1BiC,cAAc,KAEhB,SAAC,IAAD,CACET,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,EAACM,EAAAA,EAAAA,IAAoB,IACjCJ,UAAU,wDACVC,QAAS1B,EACT2B,aAAcvC,EAAYU,YAC1B8B,cAAc,KAEhB,SAAC,IAAD,CAAQP,KAAK,SAASS,UAAW/B,EAAUF,QAA3C,iCAlCJ,gBAAKmB,UAAU,SAAf,UACE,SAAC,IAAD,WACE,wD,yGCzFJe,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOZ,MACb,IAAK,SACH,OAAO,kBACFW,GADL,IAEEpC,MAAOqC,EAAOC,IACdrC,SAASsC,EAAAA,EAAAA,IAASF,EAAOC,IAAKD,EAAOV,cAGzC,IAAK,QACH,OAAO,kBAEFS,GAFL,IAGEI,WAAW,IAGf,QACE,OAAOJ,IA8Db,EA1Dc,SAACK,GACb,OAA+BC,EAAAA,EAAAA,YAAWP,EAAc,CACtDnC,MAAOyC,EAAMV,cAAgB,GAC7B9B,QAASwC,EAAMT,eAAgB,EAC/BQ,WAAW,IAHb,eAAOG,EAAP,KAAmBC,EAAnB,KAMQrB,EAAgBkB,EAAhBlB,GAAIO,EAAYW,EAAZX,QACJ9B,EAAmB2C,EAAnB3C,MAAOC,EAAY0C,EAAZ1C,SAEfK,EAAAA,EAAAA,YAAU,WACRwB,EAAQP,EAAIvB,EAAOC,KAClB,CAACsB,EAAIvB,EAAOC,EAAS6B,IAExB,IAAMe,EAAgB,SAACC,GACrBF,EAAS,CACPnB,KAAM,SACNa,IAAKQ,EAAEC,OAAO/C,MACd2B,WAAYc,EAAMd,cAIhBqB,EAAe,WACnBJ,EAAS,CAAEnB,KAAM,WAEbD,EACc,UAAlBiB,EAAMjB,SACJ,kBACED,GAAIkB,EAAMlB,GACVE,KAAMgB,EAAMhB,KACZwB,YAAaR,EAAMQ,YACnBC,SAAUL,EACVM,OAAQH,EACRhD,MAAO2C,EAAW3C,SAGpB,qBACEuB,GAAIkB,EAAMlB,GACV6B,KAAMX,EAAMW,MAAQ,EACpBF,SAAUL,EACVM,OAAQH,EACRhD,MAAO2C,EAAW3C,QAIxB,OACE,iBACEoB,UAAS,wBACNuB,EAAW1C,SAAW0C,EAAWH,WAAa,yBAFnD,WAKE,kBAAOa,QAASZ,EAAMlB,GAAtB,SAA2BkB,EAAMf,QAChCF,GACCmB,EAAW1C,SAAW0C,EAAWH,YAAa,uBAAIC,EAAMZ,iB,gGC9E1DyB,EAAc,SAAClB,EAAOC,GAC1B,OAAQA,EAAOZ,MACb,IAAK,eACH,IAAI8B,GAAc,EAClB,IAAK,IAAMC,KAAWpB,EAAMpB,OACtBoB,EAAMpB,OAAOwC,KAIfD,EADEC,IAAYnB,EAAOmB,QACPD,GAAelB,EAAOpC,QAEtBsD,GAAenB,EAAMpB,OAAOwC,GAASvD,SAIvD,OAAO,kBACFmC,GADL,IAEEpB,QAAO,kBACFoB,EAAMpB,QADL,cAEHqB,EAAOmB,QAAU,CAAExD,MAAOqC,EAAOrC,MAAOC,QAASoC,EAAOpC,WAE3DA,QAASsD,IAGb,IAAK,WACH,MAAO,CACLvC,OAAQqB,EAAOrB,OACff,QAASoC,EAAOkB,aAGpB,QACE,OAAOnB,IAGAtC,EAAU,SAAC2D,EAAeC,GACrC,OAA8BhB,EAAAA,EAAAA,YAAWY,EAAa,CACpDtC,OAAQyC,EACRxD,QAASyD,IAFX,eAAOvD,EAAP,KAAkByC,EAAlB,KAsBA,MAAO,CAACzC,GAjBawD,EAAAA,EAAAA,cAAY,SAACpC,EAAIvB,EAAOC,GAC3C2C,EAAS,CACPnB,KAAM,eACN+B,QAASjC,EACTvB,MAAOA,EACPC,QAASA,MAEV,KAEiB0D,EAAAA,EAAAA,cAAY,SAACC,EAAWC,GAC1CjB,EAAS,CACPnB,KAAM,WACNT,OAAQ4C,EACRC,aAAcA,MAEf,O,4ICzDCC,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBrC,EAAoB,iBAAO,CAAEH,KAAMqC,IAEnC7B,EAAsB,SAAAK,GAAG,MAAK,CACzCb,KAAMsC,EACNzB,IAAKA,IAQM4B,EAAkB,iBAAO,CAAEzC,KAAMwC,IAEjC1B,EAAW,SAACvC,EAAO2B,GAC9B,IAD6C,EACzC1B,GAAU,EAD+B,UAErB0B,GAFqB,IAE7C,2BAAoC,CAAC,IAA1BwC,EAAyB,QAC9BA,EAAU1C,OAASqC,IACrB7D,EAAUA,GAAWD,EAAMoE,OAAOC,OAAS,GAEzCF,EAAU1C,OAASsC,IACrB9D,EAAUA,GAAWD,EAAMoE,OAAOC,QAAUF,EAAU7B,KAEpD6B,EAAU1C,OAASuC,IACrB/D,EAAUA,GAAWD,EAAMoE,OAAOC,QAAUF,EAAU7B,KA7BjC,QA+BnB6B,EAAU1C,OACZxB,EAAUA,IAAYD,GAASmE,EAAU7B,KA/BpB,QAiCnB6B,EAAU1C,OACZxB,EAAUA,IAAYD,GAASmE,EAAU7B,KAEvC6B,EAAU1C,OAASwC,IACrBhE,EAAUA,GAAW,iBAAiBqE,KAAKtE,KAnBF,8BAsB7C,OAAOC,I,qFC3CM,SAASsE,EAA2BC,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAElE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,OAA2BF,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEH,OAAqB,CAC/GK,IAAIF,EAAIE,GACZ,IAAIK,EAAI,EAEJC,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKP,EAAEH,OAAe,CACxBc,MAAM,GAED,CACLA,MAAM,EACNnF,MAAOwE,EAAEO,OAGbjC,EAAG,SAAWsC,GACZ,MAAMA,GAERC,EAAGL,GAIP,MAAM,IAAIM,UAAU,yIAGtB,IAEIC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLR,EAAG,WACDP,EAAKA,EAAGgB,KAAKlB,IAEfU,EAAG,WACD,IAAIS,EAAOjB,EAAGkB,OAEd,OADAJ,EAAmBG,EAAKR,KACjBQ,GAET7C,EAAG,SAAW+C,GACZJ,GAAS,EACTF,EAAMM,GAERR,EAAG,WACD,IACOG,GAAoC,MAAhBd,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIe,EAAQ,MAAMF","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const navigate = useNavigate();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/api/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      navigate(`/${auth.userId}/places`);\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\n\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n\n    case \"TOUCH\": // when we first land on this page error appears so we use isTouched to give\n      return {\n        // user a chance, it trigger when user click on that input/textarea field\n        ...state,\n        isTouched: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isValid: props.initialValid || false,\n    isTouched: false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (e) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: e.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({ type: \"TOUCH\" });\n  };\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs[inputId]) {            // for name field which is not available in login form\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid; // for overall form validity we also check in else\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid, // overall form validity\r\n      };\r\n\r\n    case \"SET_DATA\":     // updating place, we create new state we previous values\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      inputId: id,\r\n      value: value,\r\n      isValid: isValid,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formValidity: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","placeId","useParams","navigate","useNavigate","useForm","title","value","isValid","description","formState","inputHandler","setFormData","useEffect","fetchPlace","process","responseData","place","placeUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","userId","className","onClear","onSubmit","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","disabled","inputReducer","state","action","val","validate","isTouched","props","useReducer","inputState","dispatch","changeHandler","e","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","length","test","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}