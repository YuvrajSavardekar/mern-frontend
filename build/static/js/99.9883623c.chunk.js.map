{"version":3,"file":"static/js/99.9883623c.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\n\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const navigate = useNavigate();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"image\", formState.inputs.image.value);\n\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/api/places`, \"POST\", formData, {\n        Authorization: `Bearer ${auth.token}`\n      });\n      navigate(\"/\");\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\n\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  // when we change image this useEffect() triggers\r\n  useEffect(() => {\r\n    if(!file) {\r\n      return;\r\n    }\r\n\r\n    const fileReader = new FileReader();\r\n    //this run after fileReader.readDataUrl() finished\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    }\r\n    fileReader.readAsDataURL(file);\r\n    console.log(previewUrl);\r\n  }, [file]);\r\n\r\n  const pickerHandler = e => {\r\n    e.preventDefault();\r\n\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if(e.target.files && e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);      // because setIsValid not trigger immedietely\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n\r\n    props.onInput(props.id, pickedFile, fileIsValid);   // to validate entire form\r\n  };\r\n\r\n  const pickImageHandler = e => {\r\n    filePickerRef.current.click();\r\n  }\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n      id={props.id}\r\n      ref={filePickerRef}\r\n      style={{ display: 'none'}}\r\n      type='file'\r\n      accept=\".jpg, .png, .jpeg\"\r\n      onChange={pickerHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} style={{ width: '13rem', height: '13rem' }} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\r\n      </div>\r\n    </div>\r\n  ) \r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\n\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n\n    case \"TOUCH\": // when we first land on this page error appears so we use isTouched to give\n      return {\n        // user a chance, it trigger when user click on that input/textarea field\n        ...state,\n        isTouched: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isValid: props.initialValid || false,\n    isTouched: false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (e) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: e.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({ type: \"TOUCH\" });\n  };\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs[inputId]) {            // for name field which is not available in login form\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid; // for overall form validity we also check in else\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid, // overall form validity\r\n      };\r\n\r\n    case \"SET_DATA\":     // updating place, we create new state we previous values\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      inputId: id,\r\n      value: value,\r\n      isValid: isValid,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formValidity: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","description","address","image","formState","inputHandler","navigate","useNavigate","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled","props","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","console","log","ref","style","display","accept","onChange","e","pickedFile","fileIsValid","target","files","length","center","src","width","height","alt","Button","onClick","current","click","inputReducer","state","action","val","validate","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}