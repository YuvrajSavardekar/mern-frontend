{"version":3,"file":"static/js/743.fcd40c79.chunk.js","mappings":"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","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\n// import LocationOnIcon from '@mui/icons-material/LocationOn';\r\n\r\nimport \"mapbox-gl/dist/mapbox-gl.js\";\r\n//  import 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  const [viewPort, setViewPort] = useState({\r\n    latitude: 40.7484405,\r\n    longitude: -73.9878584,\r\n    zoom: 20,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n  });\r\n\r\n  const { lat, lng } = props.center;\r\n  return (\r\n    <React.Fragment>\r\n      <ReactMapGL\r\n        initialViewState={{\r\n          latitude: lat,\r\n          longitude: lng,\r\n          zoom: props.zoom,\r\n        }}\r\n        mapboxAccessToken={\r\n          process.env.MAPBOX_API_TOKEN\r\n        }\r\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n        // onMove={setViewPort}\r\n        // initialViewState={{ zoom: props.zoom}}\r\n      >\r\n        <Marker latitude={lat} longitude={lng}>\r\n          {/* <button className=\"marker-btn\"> */}\r\n            {/* <img\r\n              src=\"https://www.iconpacks.net/icons/1/free-pin-icon-48-thumb.png\"\r\n              alt=\"location\"\r\n            /> */}\r\n          {/* <LocationOnIcon sx={{ width: '20px' }}/> */}\r\n          {/* </button> */}\r\n        </Marker>\r\n      </ReactMapGL>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n//  40.7484405,\r\n// lng: -73.9878584\r\n// pk.eyJ1IjoieXV2cmFqcHMiLCJhIjoiY2t6OGdoazI5MDV1ejJ2bXFhNnY2bnF1MCJ9.KDX92uVzseLOxmiGP5YqhQ\r\n\r\n// pk.eyJ1IjoieXV2cmFqcHMiLCJhIjoiY2t6OGd0bm5qMWlvZDJvcnhobDZibDM5MiJ9.CWo6Uo97rz2qKbdGw4_ZJQ\r\n\r\n// mapbox://styles/mapbox/satellite-v9\r\n// mapbox://styles/mapbox/streets-v11\r\n// mapbox://styles/mapbox/dark-v10\r\n// mapbox://styles/mapbox/light-v10\r\n// mapbox://styles/mapbox/satellite-streets-v11\r\n\r\n// initialViewState={{\r\n//   longitude: 40.7484405,\r\n//   latitude: -73.9878584,\r\n//   zoom: 14,\r\n//   width: '100vw',\r\n//   height: '100vh'\r\n// }}\r\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/api/places/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img src={`${process.env.REACT_APP_BACKEND_URL}/${props.image}`} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"names":["props","useState","latitude","longitude","zoom","width","height","center","lat","lng","initialViewState","mapboxAccessToken","process","MAPBOX_API_TOKEN","mapStyle","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","id","Authorization","token","onDelete","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","className","coordinates","inverse","danger","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","items","length","map","place","creator","location","onDeletePlace","loadedPlaces","setLoadedPlaces","useParams","useEffect","fetchPlaces","responseData","places","deletedPlaceId","prevPlaces","filter"],"sourceRoot":""}